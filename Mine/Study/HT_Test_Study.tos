## ###################
## This study will be true 15 minutes after the opening bell.
## ###################
declare once_per_bar;

## ####################
## Disable if too early
## ####################
#hint minTimeAfterBell:  minimum minutes after the opening beel before entering an order.  Default = 15
input minTimeAfterBell = 15;
def period = GetAggregationPeriod();
def currentDay  = GetYYYYMMDD();
def currentTime = GetTime();
def minimumTime = RegularTradingStart( currentDay ) + (minTimeAfterBell * 60 * 1000);
def notTooEarly = ((currentTime>=minimumTime) or (period>=AggregationPeriod.DAY));

## ####################
## Optional Not Before
## ####################
#hint notBeforeDate:  do not enter before this date - 0 disables.
input notBeforeDate = 0;
def isIntraday = (period < AggregationPeriod.DAY);
def firstDay   = if (BarNumber() == 0) then currentDay else firstDay[1];
def dateToUse  = if (notBeforeDate==0) then firstDay else notBeforeDate;
def minimumDateOk = ( (currentDay>=dateToUse) and notTooEarly );

## ####################
## Optional Buy Above
## ####################
#hint buyAbovePrice:  enter if the price is above this value - 0 disables.
input buyAbovePrice = 0.0;
def buyAboveOk = (buyAbovePrice>0.0) and (close>buyAbovePrice);

## ###################################
AddLabel( 1, 
    "minimumDateOk: " + (dateToUse)
    + 
    ", buyAbove: " + buyAbovePrice
    , Color.GRAY
);

plot isBuy = minimumDateOk and buyAboveOk;
#isBuy.SetHiding( 1 );

# Show a vertical line if we have set the notBeforeDate and not intraday
AddVerticalLine( isBuy, buyAbovePrice );

