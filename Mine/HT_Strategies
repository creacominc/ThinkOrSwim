# #######################
# This script uses some logic from TD Ameritrade scripts
# #######################
# which strategies to run
input useCAHOLD    = 1;
input useMACD      = 1;
input useStopLimit = 1;
input useStress    = 1;
input useConsBars  = 1;

# lowest point in 10 bars
input minPriceLength = 10;
input investment = 500;
input minHoldLength = 20;

input fastLength = 12;
input slowLength = 26;
input MACDLength = 9;

input offsetType = {default percent, value, tick};
input stoppct = 1;
input minHoldBars = 20;

# inputs fro Stress
input trendLength = 4;
input index = "SPY";
input length = 50;
#input investment = 5000;
input entryLevel = 10;
input exitLevel = 50;
input stopLoss = 10.0;
#input minPrice = 3.0;
#input minPriceLength = 5;
input hedgeLength = 60;
input hedgeRatio = 0.5;

# inputs for Consecutive Bars Strategy
input ConsecutiveBarsUp = 3;
input ConsecutiveBarsDown = 3;

def entryPrice = entryPrice();
def mult;
switch (offsetType) {
case percent:
    mult = entryPrice / 100;
case value:
    mult = 1;
case tick:
    mult = tickSize();
}


# ########################### BUYs
def ascending = IsAscending( close, trendLength );
# ########################### CAHOLD and yesterday is the lowest for N bars
def minPrice =  Lowest( close, minPriceLength);
def isCAHOLD =  useCAHOLD and (close > high[1]) and (close[1] == minPrice);
#AddChartBubble( isCAHOLD,    close, close, Color.light_green );
# ########################### MACD Crossover
def Diff = MACD( fastLength, slowLength, MACDLength, averageType.EXPONENTIAL ).Diff;
def isMACDCrossUp = useMACD and Crosses(Diff, 0, CrossingDirection.ABOVE);
# ########################### Stress Buy - only if trend is up
#def minPriceOk = Lowest(close, minPriceLength) > minPrice;
def stress = reference StressIndicator(index = index, length = length).Stress;
#def entryPrice = EntryPrice();
def crisisStop = close / entryPrice - 1 < -stopLoss / 100;
def isReady = if !isReady[1] and stress > 50 then yes else if IsNaN(crisisStop) then isReady[1] else if !IsNaN(entryPrice) and crisisStop then no else isReady[1];
def isStressBuy = useStress and ascending and isReady and stress <= entryLevel;
# ########################### Consecutive Bars Buy
def bars_up = if close > close[1] then bars_up[1] + 1 else 0;
def consBarsBuy = useConsBars and ascending and bars_up >= ConsecutiveBarsUp;


# ########################### Node Last Buy
def lastBuyBar = if ( isCAHOLD or isMACDCrossUp or isStressBuy or consBarsBuy ) then BarNumber() else lastBuyBar[1];

# orders
AddOrder( OrderType.BUY_TO_OPEN,  
          isCAHOLD, 
          tradeSize = investment / close, 
          tickcolor = GetColor(1),
          arrowcolor = GetColor(1),
          name = "CAHOLD_LE" );
AddOrder( OrderType.BUY_TO_OPEN,
          isMACDCrossUp, 
          tradeSize = investment / close, 
          tickcolor = GetColor(1),
          arrowcolor = GetColor(1),
          name = "MACDCrossLE" );
AddOrder( OrderType.BUY_TO_OPEN,
          isStressBuy, 
          tradeSize = investment / close, 
          tickcolor = GetColor(1), 
          arrowcolor = GetColor(1), 
          name = "StressLE" );
addOrder( OrderType.BUY_TO_OPEN,
          consBarsBuy,
          tickColor = GetColor(1),
          arrowColor = GetColor(1),
          name = "ConsBarLE" );


# ########################### SELLs
# ########################### CBLOHD and yesterday is the highest in NegativeVolumeIndex bars and 20 bars past the last buy.
def okToSell =  (BarNumber() > (lastBuyBar + minHoldLength));
def maxPrice =  Highest( close, minPriceLength);
def isCBLOHD =  okToSell and useCAHOLD and (close < low[1]) and (close[1] == maxPrice);
#AddChartBubble( isCBLOHD,    close, close, Color.light_red );
# ########################### MACD Crossover
def isMACDCrossDn = okToSell and useMACD and Crosses(Diff, 0, CrossingDirection.BELOW);
# ########################### useStopLimit
def stopPrice = entryPrice - stopPct * mult;
def isStopLimit = okToSell and useStopLimit and (low <= stopPrice);
# ########################### Stress Buy
def isStressExit = okToSell and useStress and ( (stress >= exitLevel) );
def isStressMinExit = okToSell and useStress and ( (minPrice < 3) );
def isStressCrisisStop = okToSell and useStress and crisisStop;
# ########################### Consecutive Bars Sell
def bars_down = if close < close[1] then bars_down[1] + 1 else 0;
def consBarsSell = okToSell and useConsBars and bars_down >= ConsecutiveBarsDown;

# orders
AddOrder( OrderType.SELL_TO_CLOSE,
          isCBLOHD, 
          tickcolor = GetColor(2),
          arrowcolor = GetColor(2),
          name = "CBLOHD_LX" );
AddOrder( OrderType.SELL_TO_CLOSE,
          isMACDCrossDn, 
          tickcolor = GetColor(2),
          arrowcolor = GetColor(2),
          name = "MACDCrossLX" );
AddOrder( OrderType.SELL_TO_CLOSE,
          isStopLimit,
          tickColor = GetColor(5),
          arrowColor = GetColor(5),
          name = "StopLimit" );
AddOrder( OrderType.SELL_TO_CLOSE,
          isStressMinExit,
          tickcolor = GetColor(2),
          arrowcolor = GetColor(2),
          name = "StressMinPriceLX" );
AddOrder( OrderType.SELL_TO_CLOSE,
          isStressExit,
          tickcolor = GetColor(2),
          arrowcolor = GetColor(2),
          name = "StressLX" );
AddOrder( OrderType.SELL_TO_CLOSE,
          isStressCrisisStop,
          tickcolor = GetColor(2),
          arrowcolor = GetColor(2),
          name = "StressCrisisStopLX" );
addOrder( OrderType.SELL_TO_CLOSE,
          consBarsSell,
          tickColor = GetColor(2),
          arrowColor = GetColor(2),
          name = "ConsBarLX" );

# ########################### Label for column
# AddLabel( yes
#     , if isCAHOLD  then "BUY - CAHLD"
#     else if isMACDCrossUp then "BUY - XUp"
#     else if isStressBuy then "BUY - Stress"
#     else if consBarsBuy then "BUY - ConsBar"
#     else if isCBLOHD then "SELL - CBLOHD"
#     else if isMACDCrossDn then "SELL - XDn"
#     else if isStopLimit then "SELL - StopLimit"
#     else if isStressMinExit then "SELL - StressMin"
#     else if isStressExit then "SELL - StressExit"
#     else if isStressCrisisStop then "SELL - StressCrisis"
#     else if consBarsSell then "SELL - ConsBars"
#     else  "Hold"
#     , color.WHITE );


# ########################### plot for buy scan
# plot buySignal =  isCAHOLD or isMACDCrossUp or isStressBuy or consBarsBuy;
# ########################### plot for sell scan
# plot sellSignal =  isCBLOHD or isMACDCrossDn or isStopLimit 
#                     or isStressMinExit or isStressExit or isStressCrisisStop
#                     or consBarsSell;
