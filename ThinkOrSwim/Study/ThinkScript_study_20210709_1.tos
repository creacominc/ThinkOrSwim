#HINT: This study creates a line chart tracking the trend of a stock's quarterly EPS values(it doesn't work for ETFs). It is used to quickly determine whether earnings are increasing or decreasing over various time periods. A red square appears when Earnings Per Share(EPS)is lower than the prior quarter's EPS, and a dark green square appears when EPS is higher than the previous quarter's EPS. The arrows represent a comparison of an analyst's estimated EPS for that quarter versus the actual EPS. If the arrow is colored blue, the company's actual EPS was greater than the analyst estimates. If the actual EPS was less than the analyst estimates, the arrow will be light green. Although this may seem counter-intuitive, it is intentially colored light green so that it will "disappear" on charts that also have a light green background, which signify stocks with 3 Green Arrows when using Brandon Van Zee's Top Down Trend Trading platform set-up. Blue Arrow = good; Light Green Arrow = bad.

declare lower;
declare Hide_on_intraday;

def EPS = if !isNaN(GetActualEarnings()) then GetActualEarnings() else EPS[1];

plot EPS_line_chart = GetActualEarnings();
EPS_line_chart.EnableApproximation();
EPS_line_chart.SetDefaultColor(color.black);

plot earnings_date = GetActualEarnings();
earnings_date.SetPaintingStrategy(PaintingStrategy.squares);

earnings_date.AssignValueColor(if EPS > EPS[1] then color.dark_green else color.red);
earnings_date.SetLineWeight(5);

plot EstEarning = GetEstimatedEarnings();
EstEarning.SetPaintingStrategy(PaintingStrategy.arrow_up );

EstEarning.AssignValueColor (if EstEarning < EPS then color.blue else CreateColor(153, 255, 153));
EstEarning.SetLineWeight(5);

# end code
