#STO with breakout signals  ken.rose@tdameritrade.com.com
declare lower;
input over_bought = 75;
input over_sold = 25;
input KPeriod = 14;
input DPeriod = 5;
input priceH = high;
input priceL = low;
input priceC = close;
input slowing_period = 1;
input smoothingType = {default SMA, EMA};

def lowest_k = Lowest(priceL, KPeriod);
def c1 = priceC - lowest_k;
def c2 = Highest(priceH, KPeriod) - lowest_k;
def FastK = if c2 != 0 then c1 / c2 * 100 else 0;

#plot FullK;
def fullk;
plot FullD;
#def fulld;

switch (smoothingType) {
case SMA:
    fullk = Average(FastK, slowing_period);
    FullD = Average(fullk, DPeriod);
case EMA:
    fullk = ExpAverage(FastK, slowing_period);
    FullD = ExpAverage(fullk, DPeriod);
}

plot OverBought = over_bought;
plot OverSold = over_sold;
plot FullDHIst = if FullD > 75 then 75 + (FullD - 75)  else Double.NaN ;

AddCloud(75, FullD, CreateColor(255, 255, 255), getColor(1));
AddCloud(FullD, 25, CreateColor(255, 255, 255), Color.DOWNTICK);

#Price.SetDefaultColor(CreateColor(255, 220, 210)); 

OverBought.SetDefaultColor(GetColor(1));
OverSold.SetDefaultColor(GetColor(1));

def crossedb = Crosses(FullD, 75, CrossingDirection.BELOW);
plot crossbelow = if crossedb then crossedb + 74 else Double.NaN;
crossbelow.AssignValueColor(GetColor(5));
crossbelow.SetPaintingStrategy(PaintingStrategy.ARROW_DOWN);
crossbelow.SetLineWeight(5);

def crossedu = Crosses(FullD, 25, CrossingDirection.ABOVE);
plot crossabove = if crossedu then crossedu + 24 else Double.NaN;
crossabove.AssignValueColor(GetColor(1));
crossabove.SetPaintingStrategy(PaintingStrategy.ARROW_UP);
crossabove.SetLineWeight(5);

def Phantom = if FullD < 75  and FullD  > 25 and FullD[1] < FullD[2] and FullD[2] > 25 and FullD  > FullD[1] then FullD else Double.NaN;
plot pPhantom = Phantom;
pPhantom.AssignValueColor(GetColor(1));
pPhantom.SetPaintingStrategy(PaintingStrategy.ARROW_UP);

def PhantomRed = if FullD < 75  and FullD  > 25 and FullD[1] > FullD[2] and FullD[2] > 25 and FullD  < FullD[1] then FullD else Double.NaN;
plot pPhantomRed = PhantomRed;
pPhantomRed.AssignValueColor(GetColor(5));
pPhantomRed.SetPaintingStrategy(PaintingStrategy.ARROW_Down);

